{"version":3,"sources":["reducers/index.js","components/TrelloCard.js","components/TrelloList.js","components/App.js","reportWebVitals.js","index.js"],"names":["getCurrentDate","date","Date","year","getFullYear","toString","month","getMonth","day","getDate","list","WORK_LIST_ID","WORK_LIST_TITLE","WORK_LIST_ORD","USE_YN","REG_ID","REG_DTIME","MOD_ID","MOD_DTIME","card","CARD_ID","CARD_TITLE","CARD_DESC","CARD_ORD","combineReducers","listReducer","state","action","type","copy","push","length","payload","updateListItem","cardReducer","styles","marginTop","marginBottom","whiteSpace","TrelloCard","props","Card","style","Typography","gutterBottom","cardInfo","container","backgroundColor","borderRadius","width","padding","margin","display","verticalAlign","TrelloList","useSelector","useState","addCardOpen","addCardOpenUpdate","addCardInput","addCardInputUpdate","listTitleOpen","listTitleOpenUpdate","listInfo","listTitleInput","listTitleInputUpdate","dispatch","useDispatch","addInputState","console","log","onClick","className","value","onChange","e","target","onBlur","map","item","index","placeholder","App","addListOpen","addListOpenUpdate","addListInput","addListInputUpdate","setTimeout","window","scrollTo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd0750b2.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nconst getCurrentDate = () => {\r\n    const date = new Date();\r\n    const year = date.getFullYear().toString();\r\n\r\n    let month = date.getMonth() + 1;\r\n    month = month < 10 ? '0' + month.toString() : month.toString();\r\n\r\n    let day = date.getDate();\r\n    day = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    return year + \"-\" + month + \"-\" + day ;\r\n}\r\n\r\n\r\nlet list = [\r\n    { \r\n        WORK_LIST_ID: 1,\r\n        WORK_LIST_TITLE: \"첫번째 리스트\", \r\n        WORK_LIST_ORD: 1,\r\n        USE_YN: 1,\r\n        REG_ID: \"배찬\",\r\n        REG_DTIME: \"2022-02-04\",\r\n        MOD_ID: \"배찬\",\r\n        MOD_DTIME: \"2022-02-04\"\r\n    },{ \r\n        WORK_LIST_ID: 2,\r\n        WORK_LIST_TITLE: \"두번째 리스트\", \r\n        WORK_LIST_ORD: 2,\r\n        USE_YN: 1,\r\n        REG_ID: \"배찬2\",\r\n        REG_DTIME: \"2022-02-04\",\r\n        MOD_ID: \"배찬2\",\r\n        MOD_DTIME: \"2022-02-04\"\r\n    },\r\n];\r\n\r\nlet card = [\r\n    {\r\n        CARD_ID: 1,\r\n        WORK_LIST_ID: 1,\r\n        CARD_TITLE: \"첫번째 카드\",\r\n        CARD_DESC: \"첫번째 카드 설명\",\r\n        CARD_ORD: 1,\r\n        USE_YN: 1,\r\n        REG_ID: \"배찬\",\r\n        REG_DTIME: \"2022-02-04\",\r\n        MOD_ID: \"배찬\",\r\n        MOD_DTIME: \"2022-02-04\"\r\n    },{\r\n        CARD_ID: 2,\r\n        WORK_LIST_ID: 2,\r\n        CARD_TITLE: \"두번째 카드\",\r\n        CARD_DESC: \"두번째 카드 설명\",\r\n        CARD_ORD: 1,\r\n        USE_YN: 1,\r\n        REG_ID: \"배찬\",\r\n        REG_DTIME: \"2022-02-04\",\r\n        MOD_ID: \"배찬\",\r\n        MOD_DTIME: \"2022-02-04\"\r\n    },{\r\n        CARD_ID: 3,\r\n        WORK_LIST_ID: 2,\r\n        CARD_TITLE: \"세번째 카드\",\r\n        CARD_DESC: \"세번째 카드 설명\",\r\n        CARD_ORD: 2,\r\n        USE_YN: 1,\r\n        REG_ID: \"배찬\",\r\n        REG_DTIME: \"2022-02-05\",\r\n        MOD_ID: \"배찬\",\r\n        MOD_DTIME: \"2022-02-05\"\r\n    }\r\n]\r\n\r\n\r\n\r\nfunction listReducer(state = list, action){\r\n    if(action.type === 'addList'){\r\n\r\n        let copy = [...state];\r\n        copy.push({ \r\n            WORK_LIST_ID: copy[copy.length-1].WORK_LIST_ID + 1,\r\n            WORK_LIST_TITLE: action.payload, \r\n            WORK_LIST_ORD: copy[copy.length-1].WORK_LIST_ORD + 1,\r\n            USE_YN: 1,\r\n            REG_ID: \"배찬\",\r\n            REG_DTIME: getCurrentDate(),\r\n            MOD_ID: \"배찬\",\r\n            MOD_DTIME: getCurrentDate()\r\n        });\r\n        return copy;\r\n    }else if(action.type === 'updateListTitle'){\r\n        \r\n        let copy = [...state];\r\n        \r\n        let updateListItem = copy[action.payload[1]-1];\r\n\r\n        updateListItem.WORK_LIST_TITLE = action.payload[0];\r\n        updateListItem.MOD_ID = \"배찬\";\r\n        updateListItem.MOD_DTIME = getCurrentDate();\r\n\r\n        return copy;\r\n    }else{\r\n        return state;\r\n    }\r\n    \r\n}\r\n\r\nfunction cardReducer(state = card, action){\r\n    if(action.type === 'addCard'){\r\n\r\n        let copy = [...state];\r\n        copy.push({\r\n            CARD_ID: copy[copy.length-1].CARD_ID + 1,\r\n            WORK_LIST_ID: action.payload[1],\r\n            CARD_TITLE: action.payload[0],\r\n            CARD_DESC: \"추가된 카드 설명\",\r\n            CARD_ORD: copy[copy.length-1].CARD_ORD + 1,\r\n            USE_YN: 1,\r\n            REG_ID: \"배찬\",\r\n            REG_DTIME: getCurrentDate(),\r\n            MOD_ID: \"배찬\",\r\n            MOD_DTIME: getCurrentDate()\r\n        });\r\n        return copy;\r\n    }else{\r\n        return state;\r\n    }\r\n}\r\n\r\n \r\n\r\nexport default combineReducers({listReducer,cardReducer});","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst TrelloCard = (props) => {\r\n\r\n    return(\r\n        <Card style={styles.card}>\r\n            <Typography gutterBottom>\r\n                {props.cardInfo.CARD_TITLE}\r\n            </Typography>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst styles= {\r\n    card: {\r\n        marginTop: '8px',\r\n        marginBottom: '8px',\r\n        whiteSpace: 'normal'        // card 줄바꿈 처리\r\n    }\r\n}\r\n\r\nexport default TrelloCard;","import React, { useState, useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport TrelloCard from \"./TrelloCard\";\r\n\r\nconst TrelloList = (props) =>{\r\n\r\n    const cardReducer = useSelector( (state) => state.cardReducer);\r\n\r\n    let [addCardOpen,addCardOpenUpdate] = useState(false);\r\n    let [addCardInput,addCardInputUpdate] = useState('');\r\n    \r\n    let [listTitleOpen,listTitleOpenUpdate] = useState(false);\r\n    let [listTitleInput,listTitleInputUpdate] = useState(props.listInfo.WORK_LIST_TITLE);\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const addInputState = (type) => {   // onBlur처리 되었을 때 실행\r\n        \r\n        if(type === \"list\"){\r\n            listTitleOpenUpdate(false); // list 제목 update창 닫기\r\n\r\n            if(listTitleInput !== props.listInfo.WORK_LIST_TITLE){      // 만약 list 제목이 변경된 상태로 blur되었다면 dispatch 처리해주기\r\n                dispatch({type:\"updateListTitle\", payload: [listTitleInput,props.listInfo.WORK_LIST_ID]});\r\n                console.log(\"list dispatch 발생\");\r\n            }\r\n        }else if(type === \"card\"){\r\n            if(addCardInput === \"\"){\r\n                return false;\r\n            }\r\n            addCardOpenUpdate(false);\r\n            addCardInputUpdate('');\r\n            dispatch({type:'addCard', payload: [addCardInput,props.listInfo.WORK_LIST_ID]});\r\n            console.log(\"card dispatch 발생\");\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div style={styles.container}>\r\n            \r\n            {\r\n                listTitleOpen === false\r\n                ? <div onClick={ () => listTitleOpenUpdate(true)}><b>{listTitleInput}</b></div>\r\n                : <textarea className=\"list_title_textarea\" value={listTitleInput} \r\n                    onChange={ (e) => listTitleInputUpdate(e.target.value) }\r\n                    onBlur={ () => addInputState(\"list\") } />\r\n            }\r\n            \r\n            \r\n            <div style={styles.list}>\r\n                {\r\n                    cardReducer.map( (item,index) => {\r\n                        return(\r\n                            <div key={index}>\r\n                                {\r\n                                    props.listInfo.WORK_LIST_ID === cardReducer[index].WORK_LIST_ID\r\n                                    ? <TrelloCard cardInfo={cardReducer[index]} />\r\n                                    : null\r\n                                }\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                {\r\n                addCardOpen === false\r\n                ? <div className=\"add_card\" onClick={ () => { addCardOpenUpdate(true); }} >+ Add a card</div>\r\n                : <div className=\"add_card_input\">\r\n                    <textarea onChange={ (e) => addCardInputUpdate(e.target.value) } placeholder=\"Enter a title for this card…\"></textarea>\r\n                    <button onClick={ () => addInputState(\"card\") } >Add Card</button>\r\n                    <button onClick={ () => {addCardOpenUpdate(false); addCardInputUpdate('');}}>닫기</button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles= {\r\n    container: {\r\n        backgroundColor: \"#ccc\",\r\n        borderRadius: 3,\r\n        width: 250,\r\n        padding: 8,\r\n        margin: 8,\r\n        display: 'inline-block',\r\n        verticalAlign: 'top'\r\n    },\r\n    list: {\r\n        marginTop: '8px',\r\n        marginBottom: '8px'\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default TrelloList;","import React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport '../index.css';\r\nimport TrelloList from \"./TrelloList\";\r\n\r\nfunction App() {\r\n\r\nconst listReducer = useSelector( (state) => state.listReducer);\r\n\r\nlet [addListOpen,addListOpenUpdate] = useState(false);\r\nlet [addListInput,addListInputUpdate] = useState('');\r\n\r\nlet dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"App\" style={{ whiteSpace: \"nowrap\"}}>\r\n      <header>\r\n        \r\n      </header>\r\n      <div className=\"Contents\" >\r\n\r\n        <span> \r\n          {\r\n            listReducer.map( (item,index) => {\r\n              return(\r\n                <TrelloList listInfo={item} key={index}/>\r\n              )\r\n            })\r\n          }\r\n        </span>\r\n\r\n        {\r\n          addListOpen === false\r\n          ? <div className=\"add_list\" onClick={ () => { addListOpenUpdate(true); }} >+ Add another list</div>\r\n          : <div className=\"add_list_input\">\r\n              <input type='text' onChange={ (e) => addListInputUpdate(e.target.value) } placeholder=\"Enter list title...\"></input>\r\n              <button onClick={ () => {\r\n\r\n                  if(addListInput === \"\"){\r\n                    return false;\r\n                  }\r\n\r\n                  dispatch({type:'addList', payload: addListInput});\r\n\r\n                  addListOpenUpdate(false); \r\n                  addListInputUpdate('');\r\n\r\n                  setTimeout(() => {\r\n                    window.scrollTo(50000,0);\r\n                  },0)\r\n\r\n              }}>Add list</button>\r\n              <button onClick={ () => {addListOpenUpdate(false); addListInputUpdate('');}}>닫기</button>\r\n            </div>\r\n        }\r\n\r\n      </div>\r\n      \r\n    </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers';\r\n\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}