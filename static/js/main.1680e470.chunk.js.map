{"version":3,"sources":["reducers/index.js","components/TrelloCard.js","components/TrelloList.js","components/App.js","reportWebVitals.js","index.js"],"names":["getCurrentDate","date","Date","year","getFullYear","toString","month","getMonth","day","getDate","list","WORK_LIST_ID","WORK_LIST_TITLE","WORK_LIST_ORD","USE_YN","REG_ID","REG_DTIME","MOD_ID","MOD_DTIME","card","CARD_ID","CARD_TITLE","CARD_DESC","CARD_ORD","combineReducers","listReducer","state","action","type","copy","push","length","payload","console","log","updateListItem","cardReducer","updateCardItem","styles","marginTop","marginBottom","whiteSpace","TrelloCard","props","useState","icon","iconUpdate","cardInfo","cardTitle","cardTitleUpdate","cardTitleOpen","cardTitleOpenUpdate","dispatch","useDispatch","Card","style","onMouseEnter","onMouseLeave","Typography","gutterBottom","display","float","color","onClick","className","onChange","e","target","value","autoFocus","onFocus","currentTarget","select","container","backgroundColor","borderRadius","width","padding","margin","verticalAlign","cursor","TrelloList","useSelector","addCardOpen","addCardOpenUpdate","addCardTitle","addCardTitleUpdate","listTitleOpen","listTitleOpenUpdate","listInfo","listTitle","listTitleUpdate","addInputState","onBlur","map","item","index","placeholder","App","addListOpen","addListOpenUpdate","addListTitle","addListTitleUpdate","setTimeout","window","scrollTo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1680e470.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nconst getCurrentDate = () => {\r\n    const date = new Date();\r\n    const year = date.getFullYear().toString();\r\n\r\n    let month = date.getMonth() + 1;\r\n    month = month < 10 ? '0' + month.toString() : month.toString();\r\n\r\n    let day = date.getDate();\r\n    day = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    return year + \"-\" + month + \"-\" + day ;\r\n}\r\n\r\n\r\nlet list = [\r\n    { \r\n        WORK_LIST_ID: 1,\r\n        WORK_LIST_TITLE: \"첫번째 리스트\", \r\n        WORK_LIST_ORD: 1,\r\n        USE_YN: 1,\r\n        REG_ID: \"배찬\",\r\n        REG_DTIME: \"2022-02-04\",\r\n        MOD_ID: \"배찬\",\r\n        MOD_DTIME: \"2022-02-04\"\r\n    },{ \r\n        WORK_LIST_ID: 2,\r\n        WORK_LIST_TITLE: \"두번째 리스트\", \r\n        WORK_LIST_ORD: 2,\r\n        USE_YN: 1,\r\n        REG_ID: \"배찬2\",\r\n        REG_DTIME: \"2022-02-04\",\r\n        MOD_ID: \"배찬2\",\r\n        MOD_DTIME: \"2022-02-04\"\r\n    },\r\n];\r\n\r\nlet card = [\r\n    {\r\n        CARD_ID: 1,\r\n        WORK_LIST_ID: 1,\r\n        CARD_TITLE: \"첫번째 카드\",\r\n        CARD_DESC: \"첫번째 카드 설명\",\r\n        CARD_ORD: 1,\r\n        USE_YN: 1,\r\n        REG_ID: \"배찬\",\r\n        REG_DTIME: \"2022-02-04\",\r\n        MOD_ID: \"배찬\",\r\n        MOD_DTIME: \"2022-02-04\"\r\n    },{\r\n        CARD_ID: 2,\r\n        WORK_LIST_ID: 2,\r\n        CARD_TITLE: \"두번째 카드\",\r\n        CARD_DESC: \"두번째 카드 설명\",\r\n        CARD_ORD: 1,\r\n        USE_YN: 1,\r\n        REG_ID: \"배찬\",\r\n        REG_DTIME: \"2022-02-04\",\r\n        MOD_ID: \"배찬\",\r\n        MOD_DTIME: \"2022-02-04\"\r\n    },{\r\n        CARD_ID: 3,\r\n        WORK_LIST_ID: 2,\r\n        CARD_TITLE: \"세번째 카드\",\r\n        CARD_DESC: \"세번째 카드 설명\",\r\n        CARD_ORD: 2,\r\n        USE_YN: 1,\r\n        REG_ID: \"배찬\",\r\n        REG_DTIME: \"2022-02-05\",\r\n        MOD_ID: \"배찬\",\r\n        MOD_DTIME: \"2022-02-05\"\r\n    }\r\n]\r\n\r\n\r\n\r\nfunction listReducer(state = list, action){\r\n    if(action.type === 'addList'){\r\n\r\n        let copy = [...state];\r\n        copy.push({ \r\n            WORK_LIST_ID: copy[copy.length-1].WORK_LIST_ID + 1,\r\n            WORK_LIST_TITLE: action.payload, \r\n            WORK_LIST_ORD: copy[copy.length-1].WORK_LIST_ORD + 1,\r\n            USE_YN: 1,\r\n            REG_ID: \"배찬\",\r\n            REG_DTIME: getCurrentDate(),\r\n            MOD_ID: \"배찬\",\r\n            MOD_DTIME: getCurrentDate()\r\n        });\r\n\r\n        console.log(copy);\r\n        return copy;\r\n        \r\n    }else if(action.type === 'updateListTitle'){\r\n        \r\n        let copy = [...state];\r\n        \r\n        let updateListItem = copy[action.payload[1]-1];\r\n\r\n        updateListItem.WORK_LIST_TITLE = action.payload[0];\r\n        updateListItem.MOD_ID = \"배찬\";\r\n        updateListItem.MOD_DTIME = getCurrentDate();\r\n        \r\n        console.log(copy);\r\n        return copy;\r\n\r\n    }else{\r\n        return state;\r\n    }\r\n    \r\n}\r\n\r\nfunction cardReducer(state = card, action){\r\n    if(action.type === 'addCard'){\r\n\r\n        let copy = [...state];\r\n        copy.push({\r\n            CARD_ID: copy[copy.length-1].CARD_ID + 1,\r\n            WORK_LIST_ID: action.payload[1],\r\n            CARD_TITLE: action.payload[0],\r\n            CARD_DESC: \"추가된 카드 설명\",\r\n            CARD_ORD: copy[copy.length-1].CARD_ORD + 1,\r\n            USE_YN: 1,\r\n            REG_ID: \"배찬\",\r\n            REG_DTIME: getCurrentDate(),\r\n            MOD_ID: \"배찬\",\r\n            MOD_DTIME: getCurrentDate()\r\n        });\r\n\r\n        console.log(copy);\r\n        return copy;\r\n\r\n    }else if(action.type === 'updateCardTitle'){\r\n        \r\n        let copy = [...state];\r\n\r\n        let updateCardItem = copy[action.payload[1]-1];\r\n\r\n        updateCardItem.CARD_TITLE = action.payload[0];\r\n        updateCardItem.MOD_ID = \"배찬\";\r\n        updateCardItem.MOD_DTIME = getCurrentDate();\r\n        \r\n        console.log(copy);\r\n        return copy;\r\n\r\n    }else{\r\n        return state;\r\n    }\r\n}\r\n\r\n \r\n\r\nexport default combineReducers({listReducer,cardReducer});","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst TrelloCard = (props) => {\r\n\r\n    let [icon,iconUpdate] = useState(false);\r\n\r\n    let [cardTitle,cardTitleUpdate] = useState(props.cardInfo.CARD_TITLE);\r\n    let [cardTitleOpen,cardTitleOpenUpdate] = useState(false);\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const onClickSave = () => {\r\n        \r\n        cardTitleOpenUpdate(false);\r\n\r\n        if(cardTitle !== props.cardInfo.CARD_TITLE){\r\n            console.log(\"카드 타이틀 수정 dispatch 발생\");\r\n            dispatch({type: \"updateCardTitle\", payload: [cardTitle,props.cardInfo.CARD_ID]});\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {\r\n            cardTitleOpen === false\r\n            ? <Card style={styles.card} onMouseEnter={ () => iconUpdate(true) } onMouseLeave={ () => iconUpdate(false)} >\r\n                <Typography gutterBottom style={{display:\"inline\"}}>\r\n                    {cardTitle}\r\n                </Typography>\r\n                { icon === true && <EditIcon style={{float:\"right\", color:\"#bbb\"}} onClick={()=>cardTitleOpenUpdate(true)}></EditIcon> }\r\n              </Card>\r\n            : <div className=\"add_card_input\">\r\n                <textarea onChange={ (e) => {cardTitleUpdate(e.target.value)} }value={cardTitle} \r\n                autoFocus \r\n                onFocus={(e) => e.currentTarget.select()} />\r\n                <button onClick={ onClickSave }>Save</button>\r\n                <button onClick={ () => {cardTitleOpenUpdate(false); cardTitleUpdate(props.cardInfo.CARD_TITLE)}}>Close</button>\r\n              </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nconst styles= {\r\n    card: {\r\n        marginTop: '8px',\r\n        marginBottom: '8px',\r\n        whiteSpace: 'normal'        // card 줄바꿈 처리\r\n    }\r\n}\r\n\r\nexport default TrelloCard;","import React, { useState, useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport TrelloCard from \"./TrelloCard\";\r\n\r\nconst TrelloList = (props) =>{\r\n\r\n    const cardReducer = useSelector( (state) => state.cardReducer);\r\n\r\n    let [addCardOpen,addCardOpenUpdate] = useState(false);\r\n    let [addCardTitle,addCardTitleUpdate] = useState('');\r\n    \r\n    let [listTitleOpen,listTitleOpenUpdate] = useState(false);\r\n    let [listTitle,listTitleUpdate] = useState(props.listInfo.WORK_LIST_TITLE);\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const addInputState = (type) => {   // onBlur처리 되었을 때 실행\r\n        \r\n        if(type === \"list\"){\r\n            listTitleOpenUpdate(false); // list 제목 update창 닫기\r\n\r\n            if(listTitle !== props.listInfo.WORK_LIST_TITLE){      // 만약 list 제목이 변경된 상태로 blur되었다면 dispatch 처리해주기\r\n                dispatch({type:\"updateListTitle\", payload: [listTitle,props.listInfo.WORK_LIST_ID]});\r\n                console.log(\"list dispatch 발생\");\r\n            }\r\n        }else if(type === \"card\"){\r\n            if(addCardTitle === \"\"){\r\n                return false;\r\n            }\r\n            addCardOpenUpdate(false);\r\n            dispatch({type:'addCard', payload: [addCardTitle,props.listInfo.WORK_LIST_ID]});\r\n            console.log(\"card dispatch 발생\");\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div style={styles.container}>\r\n            \r\n            {\r\n                listTitleOpen === false\r\n                ? <div onClick={ () => listTitleOpenUpdate(true)}><b>{listTitle}</b></div>\r\n                : <textarea className=\"list_title_textarea\" value={listTitle} \r\n                    onChange={ (e) => listTitleUpdate(e.target.value) }\r\n                    onBlur={ () => addInputState(\"list\") } \r\n                    autoFocus \r\n                    onFocus={(e) => e.currentTarget.select()} />\r\n            }\r\n            \r\n            \r\n            <div style={styles.list}>\r\n                {\r\n                    cardReducer.map( (item,index) => {\r\n                        return(\r\n                            <div key={index}>\r\n                                {\r\n                                    props.listInfo.WORK_LIST_ID === cardReducer[index].WORK_LIST_ID\r\n                                    ? <TrelloCard cardInfo={cardReducer[index]} />\r\n                                    : null\r\n                                }\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                {\r\n                addCardOpen === false\r\n                ? <div className=\"add_card\" onClick={ () => { addCardOpenUpdate(true); }} >+ Add a card</div>\r\n                : <div className=\"add_card_input\">\r\n                    <textarea onChange={ (e) => addCardTitleUpdate(e.target.value) } placeholder=\"Enter a title for this card…\"></textarea>\r\n                    <button onClick={ () => addInputState(\"card\") } >Add Card</button>\r\n                    <button onClick={ () => {addCardOpenUpdate(false);}}>Close</button>\r\n                  </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles= {\r\n    container: {\r\n        backgroundColor: \"#ccc\",\r\n        borderRadius: 3,\r\n        width: 250,\r\n        padding: 8,\r\n        margin: 8,\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        cursor: \"pointer\"\r\n    },\r\n    list: {\r\n        marginTop: '8px',\r\n        marginBottom: '8px'\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default TrelloList;","import React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport '../index.css';\r\nimport TrelloList from \"./TrelloList\";\r\n\r\nfunction App() {\r\n\r\nconst listReducer = useSelector( (state) => state.listReducer);\r\n\r\nlet [addListOpen,addListOpenUpdate] = useState(false);\r\nlet [addListTitle,addListTitleUpdate] = useState('');\r\n\r\nlet dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"App\" style={{ whiteSpace: \"nowrap\"}}>\r\n      <header>\r\n        \r\n      </header>\r\n      <div className=\"Contents\" >\r\n\r\n        <span> \r\n          {\r\n            listReducer.map( (item,index) => {\r\n              return(\r\n                <TrelloList listInfo={item} key={index}/>\r\n              )\r\n            })\r\n          }\r\n        </span>\r\n\r\n        {\r\n          addListOpen === false\r\n          ? <div className=\"add_list\" onClick={ () => { addListOpenUpdate(true); }} >+ Add another list</div>\r\n          : <div className=\"add_list_input\">\r\n              <input type='text' onChange={ (e) => addListTitleUpdate(e.target.value) } placeholder=\"Enter list title...\"></input>\r\n              <button onClick={ () => {\r\n\r\n                  if(addListTitle === \"\"){\r\n                    return false;\r\n                  }\r\n\r\n                  dispatch({type:'addList', payload: addListTitle});\r\n\r\n                  addListOpenUpdate(false); \r\n                  addListTitleUpdate('');\r\n\r\n                  setTimeout(() => {\r\n                    window.scrollTo(50000,0);\r\n                  },0)\r\n\r\n              }}>Add list</button>\r\n              <button onClick={ () => {addListOpenUpdate(false); addListTitleUpdate('');}}>Close</button>\r\n            </div>\r\n        }\r\n\r\n      </div>\r\n      \r\n    </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers';\r\n\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}