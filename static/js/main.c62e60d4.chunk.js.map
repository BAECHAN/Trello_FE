{"version":3,"sources":["reducers/index.js","components/TrelloCard.js","components/TrelloList.js","components/App.js","reportWebVitals.js","index.js"],"names":["initialState","combineReducers","reducer","state","action","type","copy","payload","console","log","push","forEach","element","workListId","workListTitle","cardList","card","cardId","cardTitle","sort","a","b","workListOrd","styles","marginTop","marginBottom","whiteSpace","BootstrapDialog","styled","Dialog","theme","padding","spacing","BootstrapDialogTitle","props","children","onClose","other","DialogTitle","sx","m","p","IconButton","aria-label","onClick","position","right","top","color","palette","grey","TrelloCard","useState","icon","setIcon","cardInfo","setCardTitle","cardTitleOpen","setCardTitleOpen","dispatch","useDispatch","React","open","setOpen","handleClose","dialogDiscriptionTextareaOpen","setDialogDiscriptionTextareaOpen","dialogActivityTextareaOpen","setDialogActivityTextareaOpen","Card","style","onMouseEnter","onMouseLeave","Typography","gutterBottom","display","float","event","stopPropagation","className","onChange","e","target","value","autoFocus","onFocus","currentTarget","select","axios","put","headers","then","response","status","aria-labelledby","fullWidth","maxWidth","id","DialogContent","dividers","margin","placeholder","onBlur","onInput","height","scrollHeight","parentElement","disabled","opacity","cursor","DialogActions","container","backgroundColor","borderRadius","width","verticalAlign","list","clear","menuIcon","containerHeader","popupContainer","zIndex","popupHeader","textAlign","borderBottom","popupBody","selectBox","TrelloList","addCardOpen","setAddCardOpen","addCardTitle","setAddCardTitle","listTitleOpen","setListTitleOpen","reducerData","listTitle","setListTitle","swapListOpen","setswapListOpen","anchorEl","setAnchorEl","popoverOpen","Boolean","popoverId","undefined","addInputState","data","catch","error","post","useEffect","aria-describedby","variant","Popover","anchorOrigin","vertical","horizontal","newOrder","index","totalList","length","Math","floor","JSON","parse","stringify","alert","copyList","setTimeout","map","item","Fragment","list1","list2","Number","document","getElementById","workListId1","workListId2","swapList","draggableId","provided","snapshot","ref","innerRef","dragHandleProps","draggableProps","App","useSelector","addListOpen","setAddListOpen","addListTitle","setAddListTitle","get","onDragEnd","dropResult","destination","source","droppableId","direction","droppableProps","isDragging","draggableStyle","background","encodeURIComponent","window","scrollTo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","defaultOptions","queries","refetchInterval","store","createStore","rootReducer","ReactDOM","render","StrictMode","client","initialIsOpen"],"mappings":"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","file":"static/js/main.c62e60d4.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nconst getCurrentDate = () => {\r\n  const date = new Date();\r\n  const year = date.getFullYear().toString();\r\n\r\n  let month = date.getMonth() + 1;\r\n  month = month < 10 ? '0' + month.toString() : month.toString();\r\n\r\n  let day = date.getDate();\r\n  day = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n  return year + \"-\" + month + \"-\" + day;\r\n}\r\n\r\nlet initialState = [];\r\n\r\nfunction reducer(state = initialState, action) {\r\n  if (action.type === 'getList') {\r\n    let copy = [...state];\r\n    copy = action.payload;\r\n    console.log(\"-----------------\");\r\n    console.log(copy);\r\n    return copy;\r\n\r\n  } else if (action.type === 'addList') {\r\n    let copy = [...state];\r\n    copy.push(action.payload);\r\n    return copy;\r\n\r\n  } else if (action.type === 'modListTitle') {\r\n    let copy = [...state];\r\n\r\n    copy.forEach((element) => {\r\n      if (element.workListId === action.payload.workListId) {\r\n        element.workListTitle = action.payload.workListTitle;\r\n      }\r\n    });\r\n    return copy;\r\n\r\n  } else if (action.type === 'addCard') {\r\n    let copy = [...state];\r\n\r\n    copy.forEach((element) => {\r\n      if (element.workListId === action.payload.workListId) {\r\n        element.cardList.push(action.payload);\r\n      }\r\n    });\r\n\r\n    return copy;\r\n\r\n  } else if (action.type === 'modCardTitle') {\r\n    let copy = [...state];\r\n\r\n    copy.forEach((element) => {\r\n      if (element.workListId === action.payload[0].workListId) {\r\n\r\n        element.cardList.forEach((card) => {\r\n          if (card.cardId === action.payload[0].cardId) {\r\n            card.cardTitle = action.payload[1];\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return copy;\r\n\r\n  } else if (action.type === 'swapList') {\r\n    let copy = [...state];\r\n\r\n    [copy[action.payload[0]], copy[action.payload[1]]]\r\n      = [copy[action.payload[1]], copy[action.payload[0]]];\r\n\r\n    return copy;\r\n\r\n  } else if (action.type === 'copyList') {\r\n    let copy = [...state];\r\n\r\n    // 추가된 list 객체 데이터 새로 return 받기\r\n    console.log(copy);\r\n    copy.push(action.payload);\r\n\r\n    copy.sort((a, b) => a.workListOrd - b.workListOrd);\r\n    console.log(copy);\r\n    return copy;\r\n\r\n  } else if (action.type === 'moveList') {\r\n    let copy = [...state];\r\n\r\n    copy[action.payload[0]].workListOrd = action.payload[1];\r\n\r\n    copy.sort((a, b) => a.workListOrd - b.workListOrd);\r\n    console.log(copy);\r\n\r\n    return copy;\r\n\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({ reducer });","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n\r\nconst TrelloCard = (props) => {\r\n  let [icon, setIcon] = useState(false);\r\n\r\n  let [cardTitle, setCardTitle] = useState(props.cardInfo.cardTitle);\r\n  let [cardTitleOpen, setCardTitleOpen] = useState(false);\r\n\r\n  let dispatch = useDispatch();\r\n\r\n  // useEffect(() => {\r\n  //   setCardTitle(props.cardInfo.cardTitle);\r\n  // }, [props.cardInfo]);\r\n\r\n  const onClickSave = () => {\r\n    console.log(cardTitle);\r\n    setCardTitleOpen(false);\r\n\r\n    if (cardTitle !== props.cardInfo.cardTitle) {\r\n      console.log(\"카드 타이틀 수정 dispatch 발생\");\r\n\r\n      axios\r\n        .put(\r\n          \"https://43.200.85.188:8080/card/\" + props.cardInfo.cardId,\r\n          {\r\n            cardTitle: cardTitle\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            dispatch({ type: \"modCardTitle\", payload: [props.cardInfo, cardTitle] });\r\n          } else {\r\n            console.log(response);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [dialogDiscriptionTextareaOpen, setDialogDiscriptionTextareaOpen] =\r\n    useState(false);\r\n  const [dialogActivityTextareaOpen, setDialogActivityTextareaOpen] =\r\n    useState(false);\r\n\r\n  const handleInputTextarea = (e) => {\r\n    {\r\n      e.currentTarget.value !== \"\"\r\n        ? setDialogActivityTextareaOpen(true)\r\n        : setDialogActivityTextareaOpen(false);\r\n    }\r\n    e.currentTarget.style.height = e.currentTarget.scrollHeight + \"px\";\r\n    e.currentTarget.parentElement.style.height = e.currentTarget.scrollHeight + \"px\";\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {\r\n          cardTitleOpen === false\r\n            ? <Card style={styles.card} onMouseEnter={() => setIcon(true)}\r\n              onMouseLeave={() => setIcon(false)}\r\n              onClick={handleClickOpen} >\r\n              <Typography gutterBottom style={{ display: \"inline\" }}>\r\n                {props.cardInfo.cardTitle}\r\n              </Typography>\r\n              {icon === true && <EditIcon style={{ float: \"right\", color: \"#bbb\" }} onClick={(event) => { setCardTitleOpen(true); event.stopPropagation(); }}></EditIcon>}\r\n            </Card>\r\n            : <div className=\"addCardInput\">\r\n              <textarea onChange={(e) => { setCardTitle(e.target.value) }} value={cardTitle}\r\n                autoFocus\r\n                onFocus={(e) => e.currentTarget.select()} />\r\n              <button onClick={onClickSave}>Save</button>\r\n              <button onClick={() => { setCardTitleOpen(false); setCardTitle(props.cardInfo.cardTitle) }}>Close</button>\r\n            </div>\r\n        }\r\n      </div>\r\n\r\n      <BootstrapDialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n        fullWidth={true}\r\n        maxWidth={\"md\"}\r\n      >\r\n        <BootstrapDialogTitle\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleClose}\r\n        >\r\n          {cardTitle}\r\n        </BootstrapDialogTitle>\r\n        <DialogContent dividers className=\"dialogContent\">\r\n          <div>\r\n            <div className=\"flex-container\">\r\n              <h3>Discription</h3>\r\n              {dialogDiscriptionTextareaOpen === false ? (\r\n                <button\r\n                  style={{ margin: \"15px 5px\" }}\r\n                  onClick={() => setDialogDiscriptionTextareaOpen(true)}\r\n                >\r\n                  Edit\r\n                </button>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n            <div>\r\n              {dialogDiscriptionTextareaOpen === false ? (\r\n                <div\r\n                  className=\"dialog-description-view\"\r\n                  onClick={() => setDialogDiscriptionTextareaOpen(true)}\r\n                >\r\n                  Add a more detailed description...\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <textarea\r\n                    className=\"dialog-description-textarea\"\r\n                    placeholder=\"Add a more detailed description...\"\r\n                    autoFocus\r\n                    onBlur={() => setDialogDiscriptionTextareaOpen(false)}\r\n                  ></textarea>\r\n                  <button>Save</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogContent dividers className=\"dialogContent\">\r\n          <div>\r\n            <div className=\"flex-container\">\r\n              <h3>Activity</h3>\r\n            </div>\r\n            <div className=\"dialog-activity-box\">\r\n              <textarea\r\n                className=\"dialog-activity-textarea\"\r\n                placeholder=\"Write a comment...\"\r\n                onInput={(event) => {\r\n                  handleInputTextarea(event);\r\n                }}\r\n              ></textarea>\r\n            </div>\r\n            {dialogActivityTextareaOpen === true ? (\r\n              <button>Save</button>\r\n            ) : (\r\n              <button\r\n                disabled\r\n                style={{ opacity: \"0.5\", cursor: \"not-allowed\" }}\r\n              >\r\n                Save\r\n              </button>\r\n            )}\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions></DialogActions>\r\n      </BootstrapDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  card: {\r\n    marginTop: \"8px\",\r\n    marginBottom: \"8px\",\r\n    whiteSpace: \"normal\", // card 줄바꿈 처리\r\n  },\r\n};\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\nexport default TrelloCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport TrelloCard from \"./TrelloCard\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport { Popover } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst TrelloList = (props) => {\r\n\r\n  let [addCardOpen, setAddCardOpen] = useState(false);\r\n  let [addCardTitle, setAddCardTitle] = useState(\"\");\r\n\r\n  let [listTitleOpen, setListTitleOpen] = useState(false);\r\n  let [listTitle, setListTitle] = useState(props.reducerData.workListTitle);\r\n\r\n  let [swapListOpen, setswapListOpen] = useState(false);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const popoverOpen = Boolean(anchorEl);\r\n  const popoverId = popoverOpen ? \"simple-popover\" : undefined;\r\n\r\n  let dispatch = useDispatch();\r\n\r\n  const addInputState = (type) => {\r\n    // onBlur처리 되었을 때 실행\r\n\r\n    if (type === \"list\") {\r\n      setListTitleOpen(false); // list 제목 update창 닫기\r\n\r\n      if (listTitle !== props.reducerData.workListTitle) {\r\n        // 만약 list 제목이 변경된 상태로 blur되었다면 dispatch 처리해주기\r\n\r\n        axios\r\n          .put(\r\n            \"https://43.200.85.188:8080/list/\" + props.reducerData.workListId,\r\n            {\r\n              workListTitle: listTitle,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          )\r\n          .then((response) => {\r\n            if (response.status === 200) {\r\n              dispatch({ type: \"modListTitle\", payload: response.data });\r\n            }\r\n          }).catch((error) => {\r\n            console.log(error.response);\r\n          });\r\n      }\r\n    } else if (type === \"card\") {\r\n      if (addCardTitle === \"\") {\r\n        return false;\r\n      }\r\n      setAddCardOpen(false);\r\n\r\n      axios\r\n        .post(\r\n          \"https://43.200.85.188:8080/card\",\r\n          {\r\n            cardTitle: addCardTitle,\r\n            workListId: props.reducerData.workListId\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            dispatch({ type: \"addCard\", payload: response.data });\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error.response);\r\n        });\r\n    }\r\n  };\r\n\r\n  const copyList = () => {\r\n    console.log(props);\r\n\r\n    let newOrder = 0;\r\n    if (props.index === props.totalList.length - 1) {\r\n      newOrder = props.reducerData.workListOrd + 1000;\r\n    } else {\r\n      newOrder = Math.floor((props.reducerData.workListOrd + props.totalList[props.index + 1].workListOrd) / 2);\r\n    }\r\n\r\n    axios\r\n      .post(\r\n        \"https://43.200.85.188:8080/list/copy/\" + props.reducerData.workListId,\r\n        newOrder,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          // 깊은 복사 ( 얕은 복사 하니까 복사된 객체를 변경해도 복사한 객체도 변경됨 )\r\n          response.data.cardList = JSON.parse(JSON.stringify(props.reducerData.cardList));\r\n\r\n          response.data.cardList.forEach((card) => {\r\n            card.workListId = response.data.workListId;\r\n          });\r\n\r\n          dispatch({ type: \"copyList\", payload: response.data });\r\n        }\r\n      }).catch((error) => {\r\n        alert(\"리스트 복사를 실패하였습니다.\");\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  const swapList = () => {\r\n\r\n    const list1 = props.index;\r\n    const list2 = Number(document.getElementById(\"selectPosition\").value - 1);\r\n\r\n    axios.\r\n      put(\r\n        \"https://43.200.85.188:8080/list/swap/\",\r\n        {\r\n          workListId1: props.totalList[list1].workListId,\r\n          workListId2: props.totalList[list2].workListId\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      ).then((response) => {\r\n        if (response.status === 200) {\r\n          dispatch({ type: \"swapList\", payload: [list1, list2] });\r\n        }\r\n      }).catch((error) => {\r\n        alert(\"리스트 스왑이 실패하였습니다.\");\r\n        console.log(error.response);\r\n      });\r\n\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setListTitle(props.reducerData.workListTitle);\r\n  }, [props.reducerData]);\r\n\r\n  return (\r\n    <div style={styles.container} >\r\n      {\r\n        listTitleOpen === false\r\n          ? <div>\r\n            <div style={styles.containerHeader} onClick={() => setListTitleOpen(true)}>\r\n              <b>{props.reducerData.workListTitle}</b>\r\n            </div>\r\n            <MenuIcon className=\"menuIcon\" style={styles.menuIcon}\r\n              aria-describedby={popoverId} variant=\"contained\" onClick={handleClick} />\r\n            <Popover\r\n              id={popoverId}\r\n              open={popoverOpen}\r\n              anchorEl={anchorEl}\r\n              onClose={handleClose}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}>\r\n\r\n              {\r\n                swapListOpen === false\r\n                  ? <div style={styles.popupContainer}>\r\n                    <div style={styles.popupHeader}>\r\n                      List actions\r\n                      <CloseIcon onClick={handleClose} style={{ \"float\": \"right\", \"cursor\": \"pointer\" }} />\r\n                    </div>\r\n                    <div style={styles.popupBody} className=\"popupBody\">\r\n\r\n                      <ul>\r\n                        <li onClick={() => { setAddCardOpen(true); handleClose(); }}>Add card...</li>\r\n                        <li onClick={() => { copyList(); handleClose(); }}>Copy list...</li>\r\n                        <li onClick={() => { setswapListOpen(true) }}>Move list...</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  : <div style={styles.popupContainer}>\r\n                    <div style={styles.popupHeader}>\r\n                      Move list\r\n                      <CloseIcon onClick={() => { handleClose(); setTimeout(() => { setswapListOpen(false) }, 500) }} style={{ \"float\": \"right\", \"cursor\": \"pointer\" }} />\r\n                    </div>\r\n                    <div style={styles.popupBody} className=\"popupBody\">\r\n                      <div style={{ \"display\": \"flex\" }}>\r\n                        <div>Position</div>\r\n                        <div style={{ \"flexGrow\": \"2\" }}></div>\r\n                        <select id=\"selectPosition\" style={styles.selectBox}>\r\n                          {\r\n                            props.totalList.map((item, index) => {\r\n                              return (\r\n                                <React.Fragment key={index}>\r\n                                  <option>{index + 1}</option>\r\n                                </React.Fragment>\r\n                              )\r\n                            })\r\n                          }\r\n                        </select>\r\n                      </div>\r\n                      <button onClick={() => { swapList(); handleClose(); setTimeout(() => { setswapListOpen(false) }, 500) }}>Move</button>\r\n                    </div>\r\n                  </div>\r\n              }\r\n            </Popover>\r\n          </div>\r\n          : <textarea className=\"listTitleTextarea\" value={listTitle}\r\n            onChange={(e) => setListTitle(e.target.value)}\r\n            onBlur={() => addInputState(\"list\")}\r\n            autoFocus\r\n            onFocus={(e) => e.currentTarget.select()} />\r\n      }\r\n      <div style={styles.list}>\r\n        {\r\n          props.reducerData.cardList && props.reducerData.cardList.map((item, index) => {\r\n            return (\r\n              <Draggable draggableId={\"card\" + index} index={index} key={index}>\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.dragHandleProps}\r\n                    {...provided.draggableProps}>\r\n                    <TrelloCard cardInfo={item} />\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n      {\r\n        addCardOpen === false\r\n          ? <div className=\"addCard\" onClick={() => { setAddCardOpen(true); }} >+ Add a card</div>\r\n          : <div className=\"addCardInput\">\r\n            <textarea onChange={(e) => setAddCardTitle(e.target.value)} placeholder=\"Enter a title for this card…\"></textarea>\r\n            <button onClick={() => addInputState(\"card\")} >Add Card</button>\r\n            <button onClick={() => { setAddCardOpen(false); }}>Close</button>\r\n          </div>\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    backgroundColor: \"#ccc\",\r\n    borderRadius: 3,\r\n    width: 250,\r\n    padding: 8,\r\n    margin: 8,\r\n    display: \"inline-block\",\r\n    verticalAlign: \"top\",\r\n    cursor: \"pointer\",\r\n  },\r\n  list: {\r\n    marginTop: \"8px\",\r\n    marginBottom: \"8px\",\r\n    clear: \"both\",\r\n  },\r\n  menuIcon: {\r\n    float: \"right\",\r\n    color: \"#000\",\r\n    opacity: \"0.5\",\r\n  },\r\n  containerHeader: {\r\n    float: \"left\",\r\n    width: \"85%\",\r\n  },\r\n\r\n  popupContainer: {\r\n    zIndex: \"1\",\r\n    width: \"200px\",\r\n    height: \"300px\",\r\n    backgroundColor: \"#eee\",\r\n    borderRadius: \"3px\",\r\n    padding: \"3px\",\r\n  },\r\n  popupHeader: {\r\n    textAlign: \"center\",\r\n    borderBottom: \"1px solid #ccc\",\r\n    padding: \"10px\",\r\n  },\r\n  popupBody: {\r\n    borderBottom: \"1px solid #ccc\",\r\n    padding: \"10px\",\r\n  },\r\n  selectBox: {\r\n    width: \"85px\",\r\n    height: \"25px\",\r\n  },\r\n};\r\n\r\nexport default TrelloList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../index.css\";\r\nimport TrelloList from \"./TrelloList\";\r\nimport axios from \"axios\";\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\n\r\nfunction App() {\r\n  const reducer = useSelector((state) => state.reducer);\r\n\r\n  let [addListOpen, setAddListOpen] = useState(false);\r\n  let [addListTitle, setAddListTitle] = useState(\"\");\r\n\r\n  let dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://43.200.85.188:8080/list\").then((response) => {\r\n      console.log(response.status);\r\n      const data = response.data;\r\n      dispatch({ type: \"getList\", payload: data });\r\n    });\r\n  }, []);\r\n\r\n  // const { isLoading, error, data, isFetching } = useQuery(\"repoData\", () =>\r\n  //   axios.get(\"https://43.200.85.188:8080/list\").then((response) => {\r\n  //     // const data = response.data;\r\n  //     // dispatch({ type: \"getList\", payload: data });\r\n  //     console.log(response);\r\n  //     return response.data;\r\n  //   })\r\n  // );\r\n\r\n  // if (isLoading) return \"Loading...,..................\";\r\n  // if (error) return \"An error has occurred: \" + error.message;\r\n\r\n  const dragStyle = (isDragging, draggableStyle) => ({\r\n    verticalAlign: 'top',\r\n    background: isDragging ? 'blue' : 'none',\r\n    borderRadius: 3,\r\n    ...draggableStyle\r\n  });\r\n\r\n  const onDragEndList = (dropResult) => {\r\n\r\n    if (!dropResult.destination) {\r\n      return false;\r\n    } else {\r\n\r\n      let newOrder = 0;\r\n      console.log(dropResult);\r\n\r\n      if (dropResult.destination.index === reducer.length - 1) {\r\n        // 맨 뒤로 드랍\r\n        newOrder = reducer[dropResult.destination.index].workListOrd + 1000;\r\n\r\n      } else if (dropResult.destination.index === 0) {\r\n        // 맨 앞으로 드랍\r\n        newOrder = Math.floor(reducer[0].workListOrd / 2)\r\n\r\n      } else {\r\n        if (dropResult.source.index < dropResult.destination.index) {\r\n          newOrder = Math.floor((reducer[dropResult.destination.index].workListOrd + reducer[dropResult.destination.index + 1].workListOrd) / 2);\r\n        } else if (dropResult.source.index > dropResult.destination.index) {\r\n          newOrder = Math.floor((reducer[dropResult.destination.index - 1].workListOrd + reducer[dropResult.destination.index].workListOrd) / 2);\r\n        } else {\r\n          // 아무 일도 일어나지 않음\r\n          return false;\r\n        }\r\n\r\n      }\r\n      axios\r\n        .put(\r\n          \"https://43.200.85.188:8080/list/move/\" + reducer[dropResult.source.index].workListId,\r\n          newOrder,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            dispatch({ type: \"moveList\", payload: [dropResult.source.index, newOrder] });\r\n          } else {\r\n            console.log(response.status);\r\n          }\r\n        }).catch((error) => {\r\n          console.log(\"에러가 발생하였습니다.\", error.response);\r\n        });\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\" style={{ whiteSpace: \"nowrap\" }}>\r\n      <header>\r\n\r\n      </header>\r\n      <div className=\"contents\">\r\n        <DragDropContext onDragEnd={onDragEndList}>\r\n          <Droppable droppableId=\"contents-list\" direction=\"horizontal\">\r\n            {(provided) => (\r\n              <div\r\n                className=\"contents-list\"\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}>\r\n                {\r\n                  reducer.map((item, index) => {\r\n                    return (\r\n                      <Draggable draggableId={\"list\" + index} key={index} index={index}>\r\n                        {(provided, snapshot) => (\r\n                          <div className=\"drag-item\"\r\n                            ref={provided.innerRef}\r\n                            {...provided.dragHandleProps}\r\n                            {...provided.draggableProps}\r\n                            style={dragStyle(\r\n                              snapshot.isDragging,\r\n                              provided.draggableProps.style\r\n                            )}\r\n                          >\r\n                            <DragDropContext>\r\n                              <Droppable droppableId=\"contents-card\">\r\n                                {(provided) => (\r\n                                  <div\r\n                                    className=\"contents-card\"\r\n                                    {...provided.droppableProps}\r\n                                    ref={provided.innerRef}\r\n                                  >\r\n                                    <TrelloList reducerData={reducer[index]}\r\n                                      index={index}\r\n                                      totalList={reducer} />\r\n                                    {provided.placeholder}\r\n                                  </div>\r\n                                )}\r\n                              </Droppable>\r\n                            </DragDropContext>\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    )\r\n                  })\r\n                }\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n        {\r\n          addListOpen === false\r\n            ? <div className=\"addList\" onClick={() => { setAddListOpen(true); }} >+ Add another list</div>\r\n            : <div className=\"addListInput\">\r\n              <input type='text' onChange={(e) => setAddListTitle(e.target.value)} placeholder=\"Enter list title...\"></input>\r\n              <button onClick={() => {\r\n\r\n                if (addListTitle === \"\") {\r\n                  return false;\r\n\r\n                } else {\r\n                  axios.post('https://43.200.85.188:8080/list',\r\n                    {\r\n                      workListTitle: encodeURIComponent(addListTitle)\r\n                    },\r\n                    {\r\n                      headers: {\r\n                        'Content-Type': 'application/json'\r\n                      }\r\n                    }\r\n                  ).then(response => {\r\n                    if (response.status === 200) {\r\n                      dispatch({ type: \"addList\", payload: response.data });\r\n                    }\r\n                  });\r\n\r\n                  setAddListOpen(false);\r\n                  setAddListTitle('');\r\n\r\n                  setTimeout(() => {\r\n                    window.scrollTo(50000, 0);\r\n                  }, 0)\r\n                }\r\n              }}>Add list</button>\r\n              <button onClick={() => { setAddListOpen(false); setAddListTitle(''); }}>Close</button>\r\n            </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\n\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      // 공통 config 설정\r\n      refetchInterval: 3000,\r\n    },\r\n  },\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <QueryClientProvider client={queryClient}>\r\n      {/* devtools */}\r\n      <ReactQueryDevtools initialIsOpen={true} />\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </QueryClientProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}