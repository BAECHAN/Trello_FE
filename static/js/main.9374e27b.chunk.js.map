{"version":3,"sources":["reducers/index.js","components/TrelloCard.js","components/TrelloList.js","components/App.js","reportWebVitals.js","index.js"],"names":["getCurrentDate","date","Date","year","getFullYear","toString","month","getMonth","day","getDate","list","WORK_LIST_ID","WORK_LIST_TITLE","WORK_LIST_ORD","USE_YN","REG_ID","REG_DTIME","MOD_ID","MOD_DTIME","card","CARD_ID","CARD_TITLE","CARD_DESC","CARD_ORD","dataInfo","listLength","length","combineReducers","listReducer","state","action","type","copy","push","payload","console","log","forEach","element","temp","index","copiedTitle","copiedOrd","cardReducer","updateCardItem","infoReducer","styles","marginTop","marginBottom","whiteSpace","TrelloCard","props","useState","icon","iconUpdate","cardInfo","cardTitle","cardTitleUpdate","cardTitleOpen","cardTitleOpenUpdate","dispatch","useDispatch","Card","style","onMouseEnter","onMouseLeave","Typography","gutterBottom","display","float","color","onClick","className","onChange","e","target","value","autoFocus","onFocus","currentTarget","select","container","backgroundColor","borderRadius","width","padding","margin","verticalAlign","cursor","clear","menuIcon","opacity","containerHeader","popupContainer","zIndex","height","popupHeader","textAlign","borderBottom","popupBody","selectBox","TrelloList","useSelector","addCardOpen","addCardOpenUpdate","addCardTitle","addCardTitleUpdate","listTitleOpen","listTitleOpenUpdate","listTitle","listTitleUpdate","moveListOpen","moveListOpenUpdate","anchorEl","setAnchorEl","handleClose","popoverOpen","Boolean","popoverId","undefined","addInputState","listInfo","useEffect","variant","event","Popover","id","open","onClose","anchorOrigin","vertical","horizontal","setTimeout","map","item","Fragment","Number","document","getElementById","onBlur","placeholder","App","addListOpen","addListOpenUpdate","addListTitle","addListTitleUpdate","window","scrollTo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","rootReducer","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9374e27b.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nconst getCurrentDate = () => {\r\n    const date = new Date();\r\n    const year = date.getFullYear().toString();\r\n\r\n    let month = date.getMonth() + 1;\r\n    month = month < 10 ? '0' + month.toString() : month.toString();\r\n\r\n    let day = date.getDate();\r\n    day = day < 10 ? '0' + day.toString() : day.toString();\r\n\r\n    return year + \"-\" + month + \"-\" + day ;\r\n}\r\n\r\n\r\nlet list = [\r\n    { \r\n        WORK_LIST_ID: 1,\r\n        WORK_LIST_TITLE: \"첫번째 리스트\", \r\n        WORK_LIST_ORD: 1,\r\n        USE_YN: 1,\r\n        REG_ID: \"배찬\",\r\n        REG_DTIME: \"2022-02-04\",\r\n        MOD_ID: \"배찬\",\r\n        MOD_DTIME: \"2022-02-04\"\r\n    },{ \r\n        WORK_LIST_ID: 2,\r\n        WORK_LIST_TITLE: \"두번째 리스트\", \r\n        WORK_LIST_ORD: 1001,\r\n        USE_YN: 1,\r\n        REG_ID: \"배찬2\",\r\n        REG_DTIME: \"2022-02-04\",\r\n        MOD_ID: \"배찬2\",\r\n        MOD_DTIME: \"2022-02-04\"\r\n    },{ \r\n        WORK_LIST_ID: 3,\r\n        WORK_LIST_TITLE: \"세번째 리스트\", \r\n        WORK_LIST_ORD: 2001,\r\n        USE_YN: 1,\r\n        REG_ID: \"배찬3\",\r\n        REG_DTIME: \"2022-03-13\",\r\n        MOD_ID: \"배찬3\",\r\n        MOD_DTIME: \"2022-03-13\"\r\n    },\r\n];\r\n\r\nlet card = [\r\n    {\r\n        CARD_ID: 1,\r\n        WORK_LIST_ID: 1,\r\n        CARD_TITLE: \"첫번째 카드\",\r\n        CARD_DESC: \"첫번째 카드 설명\",\r\n        CARD_ORD: 1,\r\n        USE_YN: 1,\r\n        REG_ID: \"배찬\",\r\n        REG_DTIME: \"2022-02-04\",\r\n        MOD_ID: \"배찬\",\r\n        MOD_DTIME: \"2022-02-04\"\r\n    },{\r\n        CARD_ID: 2,\r\n        WORK_LIST_ID: 2,\r\n        CARD_TITLE: \"두번째 카드\",\r\n        CARD_DESC: \"두번째 카드 설명\",\r\n        CARD_ORD: 1001,\r\n        USE_YN: 1,\r\n        REG_ID: \"배찬\",\r\n        REG_DTIME: \"2022-02-04\",\r\n        MOD_ID: \"배찬\",\r\n        MOD_DTIME: \"2022-02-04\"\r\n    },{\r\n        CARD_ID: 3,\r\n        WORK_LIST_ID: 2,\r\n        CARD_TITLE: \"세번째 카드\",\r\n        CARD_DESC: \"세번째 카드 설명\",\r\n        CARD_ORD: 2001,\r\n        USE_YN: 1,\r\n        REG_ID: \"배찬\",\r\n        REG_DTIME: \"2022-02-05\",\r\n        MOD_ID: \"배찬\",\r\n        MOD_DTIME: \"2022-02-05\"\r\n    },{\r\n        CARD_ID: 4,\r\n        WORK_LIST_ID: 3,\r\n        CARD_TITLE: \"4번째 카드\",\r\n        CARD_DESC: \"4번째 카드 설명\",\r\n        CARD_ORD: 3001,\r\n        USE_YN: 1,\r\n        REG_ID: \"배찬\",\r\n        REG_DTIME: \"2022-03-13\",\r\n        MOD_ID: \"배찬\",\r\n        MOD_DTIME: \"2022-03-13\"\r\n    }\r\n];\r\n\r\n\r\nlet dataInfo = {\r\n    listLength : list.length\r\n};\r\n\r\nfunction listReducer(state = list, action){\r\n    if(action.type === 'addList'){\r\n\r\n        let copy = [...state];\r\n        copy.push({ \r\n            WORK_LIST_ID: copy[copy.length-1].WORK_LIST_ID + 1,     //  이 부분은 ai로 처리해야할듯\r\n            WORK_LIST_TITLE: action.payload, \r\n            WORK_LIST_ORD: copy[copy.length-1].WORK_LIST_ORD + 1000,   //  이 부분은 ai로 처리해야할듯\r\n            USE_YN: 1,\r\n            REG_ID: \"배찬\",\r\n            REG_DTIME: getCurrentDate(),\r\n            MOD_ID: \"배찬\",\r\n            MOD_DTIME: getCurrentDate()\r\n        });\r\n\r\n        console.log(copy);\r\n        return copy;\r\n        \r\n    }else if(action.type === 'updateListTitle'){\r\n        \r\n        let copy = [...state];\r\n\r\n        copy.forEach( (element) => {\r\n            if(element.WORK_LIST_ID === action.payload[1]){\r\n                element.WORK_LIST_TITLE = action.payload[0];\r\n                element.MOD_ID = \"배찬\";\r\n                element.MOD_DTIME = getCurrentDate();\r\n            }\r\n        });\r\n        \r\n        // let updateListItem = copy[action.payload[1]-1];\r\n\r\n        // updateListItem.WORK_LIST_TITLE = action.payload[0];\r\n        // updateListItem.MOD_ID = \"배찬\";\r\n        // updateListItem.MOD_DTIME = getCurrentDate();\r\n        \r\n        console.log(copy);\r\n        return copy;\r\n\r\n    }else if(action.type === 'copyList'){\r\n        \r\n        let copy = [...state];\r\n        let copiedTitle = \"\";\r\n        let copiedOrd = 0;\r\n\r\n\r\n        copy.forEach((element,index) => {\r\n\r\n            if(element.WORK_LIST_ID  === action.payload){\r\n                copiedTitle = element.WORK_LIST_TITLE;\r\n                copiedOrd = index+2;\r\n            }\r\n        });\r\n        \r\n        copy.push({ \r\n            WORK_LIST_ID: copy[copy.length-1].WORK_LIST_ID + 1,\r\n            WORK_LIST_TITLE: copiedTitle,\r\n            WORK_LIST_ORD: copiedOrd,\r\n            USE_YN: 1,\r\n            REG_ID: \"배찬\",\r\n            REG_DTIME: getCurrentDate(),\r\n            MOD_ID: \"배찬\",\r\n            MOD_DTIME: getCurrentDate()\r\n        });\r\n\r\n    }else if(action.type === 'moveList'){\r\n        let copy = [...state];\r\n        let temp = \"\";\r\n\r\n        console.log(\"기본값 :\" + action.payload[0]);\r\n        console.log(\"변경값 :\" + action.payload[1]);\r\n\r\n        copy.forEach((element,index) => {\r\n            console.log(index);\r\n\r\n            if(copy[index].WORK_LIST_ORD === action.payload[0]){\r\n                copy[index].WORK_LIST_ORD = action.payload[1];\r\n                console.log(\"변경전\");\r\n                console.log(copy[index]);\r\n            }else if(copy[index].WORK_LIST_ORD === action.payload[1]){\r\n                copy[index].WORK_LIST_ORD = action.payload[0];\r\n                console.log(\"변경후\");\r\n                console.log(copy[index]);\r\n            }\r\n        });\r\n\r\n        temp = copy[action.payload[0]-1];\r\n        copy[action.payload[0]-1] = copy[action.payload[1]-1];\r\n        copy[action.payload[1]-1] = temp;\r\n\r\n        return copy;\r\n    }else{\r\n        return state;\r\n    }\r\n    \r\n}\r\n\r\nfunction cardReducer(state = card, action){\r\n    if(action.type === 'addCard'){\r\n\r\n        let copy = [...state];\r\n        copy.push({\r\n            CARD_ID: copy[copy.length-1].CARD_ID + 1,\r\n            WORK_LIST_ID: action.payload[1],\r\n            CARD_TITLE: action.payload[0],\r\n            CARD_DESC: \"추가된 카드 설명\",\r\n            CARD_ORD: copy[copy.length-1].CARD_ORD + 1,\r\n            USE_YN: 1,\r\n            REG_ID: \"배찬\",\r\n            REG_DTIME: getCurrentDate(),\r\n            MOD_ID: \"배찬\",\r\n            MOD_DTIME: getCurrentDate()\r\n        });\r\n\r\n        console.log(copyr\n        return copy;\r\n\r\n    }else if(action.type === 'updateCardTitle'){\r\n        \r\n        let copy = [...state];\r\n\r\n        let updateCardItem = copy[action.payload[1]-1];\r\n\r\n        updateCardItem.CARD_TITLE = action.payload[0];\r\n        updateCardItem.MOD_ID = \"배찬\";\r\n        updateCardItem.MOD_DTIME = getCurrentDate();\r\n        \r\n        console.log(copy);\r\n        return copy;\r\n\r\n    }else{\r\n        return state;\r\n    }\r\n}\r\n\r\nfunction infoReducer(state = dataInfo, action){\r\n    return state;\r\n}\r\n\r\n\r\nexport default combineReducers({listReducer,cardReducer,infoReducer});","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst TrelloCard = (props) => {\r\n\r\n    let [icon,iconUpdate] = useState(false);\r\n\r\n    let [cardTitle,cardTitleUpdate] = useState(props.cardInfo.CARD_TITLE);\r\n    let [cardTitleOpen,cardTitleOpenUpdate] = useState(false);\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const onClickSave = () => {\r\n        \r\n        cardTitleOpenUpdate(false);\r\n\r\n        if(cardTitle !== props.cardInfo.CARD_TITLE){\r\n            console.log(\"카드 타이틀 수정 dispatch 발생\");\r\n            dispatch({type: \"updateCardTitle\", payload: [cardTitle,props.cardInfo.CARD_ID]});\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {\r\n            cardTitleOpen === false\r\n            ? <Card style={styles.card} onMouseEnter={ () => iconUpdate(true) } onMouseLeave={ () => iconUpdate(false)} >\r\n                <Typography gutterBottom style={{display:\"inline\"}}>\r\n                    {cardTitle}\r\n                </Typography>\r\n                { icon === true && <EditIcon style={{float:\"right\", color:\"#bbb\"}} onClick={()=>cardTitleOpenUpdate(true)}></EditIcon> }\r\n              </Card>\r\n            : <div className=\"add_card_input\">\r\n                <textarea onChange={ (e) => {cardTitleUpdate(e.target.value)} }value={cardTitle} \r\n                autoFocus \r\n                onFocus={(e) => e.currentTarget.select()} />\r\n                <button onClick={ onClickSave }>Save</button>\r\n                <button onClick={ () => {cardTitleOpenUpdate(false); cardTitleUpdate(props.cardInfo.CARD_TITLE)}}>Close</button>\r\n              </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nconst styles= {\r\n    card: {\r\n        marginTop: '8px',\r\n        marginBottom: '8px',\r\n        whiteSpace: 'normal'        // card 줄바꿈 처리\r\n    }\r\n}\r\n\r\nexport default TrelloCard;","import React, {  useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport TrelloCard from \"./TrelloCard\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { Popover } from '@material-ui/core';\r\n\r\nconst TrelloList = (props) =>{\r\n\r\n    const listReducer = useSelector( (state) => state.listReducer);\r\n    const cardReducer = useSelector( (state) => state.cardReducer);\r\n\r\n    let [addCardOpen,addCardOpenUpdate] = useState(false);\r\n    let [addCardTitle,addCardTitleUpdate] = useState('');\r\n    \r\n    let [listTitleOpen,listTitleOpenUpdate] = useState(false);\r\n    let [listTitle,listTitleUpdate] = useState(listReducer[props.index].WORK_LIST_TITLE);\r\n\r\n    let [moveListOpen,moveListOpenUpdate] = useState(false);\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const popoverOpen = Boolean(anchorEl);\r\n    const popoverId = popoverOpen ? 'simple-popover' : undefined;\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const addInputState = (type) => {   // onBlur처리 되었을 때 실행\r\n        \r\n        if(type === \"list\"){\r\n            listTitleOpenUpdate(false); // list 제목 update창 닫기\r\n\r\n            if(listTitle !== props.listInfo.WORK_LIST_TITLE){      // 만약 list 제목이 변경된 상태로 blur되었다면 dispatch 처리해주기\r\n                console.log(\"list dispatch 발생\");\r\n                dispatch({type:\"updateListTitle\", payload: [listTitle,listReducer[props.index].WORK_LIST_ID]});\r\n            }\r\n        }else if(type === \"card\"){\r\n            if(addCardTitle === \"\"){\r\n                return false;\r\n            }\r\n            addCardOpenUpdate(false);\r\n            \r\n            console.log(\"card dispatch 발생\");\r\n            dispatch({type:'addCard', payload: [addCardTitle,props.listInfo.WORK_LIST_ID]});\r\n            \r\n        }\r\n    };\r\n\r\n    const copyList = () => {\r\n        dispatch({type:\"copyList\", payload: [props.listInfo.WORK_LIST_ID]});\r\n    }\r\n\r\n    const moveList = () =>{\r\n        dispatch({type:\"moveList\", payload: [props.index+1, Number(document.getElementById(\"selectPosition\").value)]});\r\n    }\r\n\r\n\r\n    useEffect( () => {\r\n        listTitleUpdate(listReducer[props.index].WORK_LIST_TITLE);\r\n    }, [listReducer]);\r\n\r\n    return(\r\n        <div style={styles.container}>\r\n\r\n            \r\n            {\r\n                listTitleOpen === false\r\n                ? <div>\r\n                    <div style={styles.containerHeader} onClick={ () => listTitleOpenUpdate(true) }>\r\n                        {/* <b>{listTitle}</b> */}\r\n                        <b>{listReducer[props.index].WORK_LIST_TITLE}</b>\r\n                        <b>{listReducer[props.index].WORK_LIST_ID}</b>\r\n                    </div>\r\n                    <MenuIcon className=\"menuIcon\" style={styles.menuIcon}\r\n                        aria-describedby={popoverId} variant=\"contained\" onClick={handleClick} />\r\n                    <Popover\r\n                        id={popoverId}\r\n                        open={popoverOpen}\r\n                        anchorEl={anchorEl}\r\n                        onClose={handleClose}\r\n                        anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                        }}>\r\n\r\n                        {\r\n                            moveListOpen === false\r\n                            ? <div style={styles.popupContainer}>\r\n                                <div style={styles.popupHeader}>\r\n                                    List actions\r\n                                    <CloseIcon onClick={handleClose} style={{\"float\":\"right\", \"cursor\":\"pointer\"}}/>\r\n                                </div>\r\n                                <div style={styles.popupBody} className=\"popupBody\">\r\n                                    <ul>\r\n                                        <li onClick={ () => { addCardOpenUpdate(true); handleClose();}}>Add card...</li>\r\n                                        <li onClick={ (e) => { copyList(e); handleClose();}}>Copy list...</li>\r\n                                        <li onClick={ () => { moveListOpenUpdate(true) }}>Move list...</li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            : <div style={styles.popupContainer}>\r\n                                <div style={styles.popupHeader}>\r\n                                    Move list\r\n                                    <CloseIcon onClick={ () => {handleClose(); setTimeout(() => {moveListOpenUpdate(false)},500)}} style={{\"float\":\"right\", \"cursor\":\"pointer\"}}/>\r\n                                </div>\r\n                                <div style={styles.popupBody} className=\"popupBody\">\r\n                                    <div style={{\"display\":\"flex\"}}>\r\n                                        <div>Position</div>\r\n                                        <div style={{\"flexGrow\":\"2\"}}></div>\r\n                                        <select id=\"selectPosition\" style={styles.selectBox}>\r\n                                            {\r\n                                                listReducer.map( (item,index) => {\r\n                                                    return(\r\n                                                        <React.Fragment key={index}>\r\n                                                            <option>{index+1}</option>\r\n                                                        </React.Fragment>\r\n                                                    )\r\n                                                }) \r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <button onClick={ () => {moveList(); handleClose(); setTimeout(() => {moveListOpenUpdate(false)},500)} }>Move</button>\r\n                                </div>\r\n                            </div>   \r\n                        }\r\n                    </Popover>\r\n                  </div>\r\n                : <textarea className=\"list_title_textarea\" value={listTitle} \r\n                    onChange={ (e) => listTitleUpdate(e.target.value) }\r\n                    onBlur={ () => addInputState(\"list\") } \r\n                    autoFocus \r\n                    onFocus={(e) => e.currentTarget.select()} />\r\n            }\r\n            \r\n\r\n            <div style={styles.list}>\r\n                {\r\n                    cardReducer.map( (item,index) => {\r\n                        return(\r\n                            <div key={index}>\r\n                                {\r\n                                    props.listInfo.WORK_LIST_ID === item.WORK_LIST_ID\r\n                                    ? <TrelloCard cardInfo={item} />\r\n                                    : null\r\n                                }\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                {\r\n                addCardOpen === false\r\n                ? <div className=\"add_card\" onClick={ () => { addCardOpenUpdate(true); }} >+ Add a card</div>\r\n                : <div className=\"add_card_input\">\r\n                    <textarea onChange={ (e) => addCardTitleUpdate(e.target.value) } placeholder=\"Enter a title for this card…\"></textarea>\r\n                    <button onClick={ () => addInputState(\"card\") } >Add Card</button>\r\n                    <button onClick={ () => {addCardOpenUpdate(false);}}>Close</button>\r\n                  </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles= {\r\n    container: {\r\n        backgroundColor: \"#ccc\",\r\n        borderRadius: 3,\r\n        width: 250,\r\n        padding: 8,\r\n        margin: 8,\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        cursor: \"pointer\"\r\n    },\r\n    list: {\r\n        marginTop: '8px',\r\n        marginBottom: '8px',\r\n        clear: 'both'\r\n    },\r\n    menuIcon: {\r\n        float:\"right\", \r\n        color:\"#000\",\r\n        opacity: \"0.5\"\r\n    },\r\n    containerHeader: {\r\n        float: 'left',\r\n        width:'85%'\r\n    },\r\n\r\n    popupContainer: {\r\n        zIndex: '1',\r\n        width: '200px',\r\n        height: '300px',\r\n        backgroundColor: '#eee',\r\n        borderRadius: '3px',\r\n        padding: '3px'\r\n    },\r\n    popupHeader: {\r\n        textAlign: 'center',\r\n        borderBottom: '1px solid #ccc',\r\n        padding:'10px'\r\n        \r\n    },\r\n    popupBody: {\r\n        borderBottom: '1px solid #ccc',\r\n        padding:'10px'\r\n    },\r\n    selectBox: {\r\n        width: '85px',\r\n        height:'25px',\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default TrelloList;","import React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport '../index.css';\r\nimport TrelloList from \"./TrelloList\";\r\n\r\nfunction App() {\r\n\r\nconst listReducer = useSelector( (state) => state.listReducer);\r\n\r\nlet [addListOpen,addListOpenUpdate] = useState(false);\r\nlet [addListTitle,addListTitleUpdate] = useState('');\r\n\r\nlet dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"App\" style={{ whiteSpace: \"nowrap\"}}>\r\n      <header>\r\n        \r\n      </header>\r\n      <div className=\"Contents\" >\r\n\r\n        <span> \r\n          {\r\n            listReducer.map( (item,index) => {\r\n              return(\r\n                <TrelloList listInfo={listReducer[index]} index={index} key={index}/>\r\n              )\r\n            })\r\n          }\r\n        </span>\r\n\r\n        {\r\n          addListOpen === false\r\n          ? <div className=\"add_list\" onClick={ () => { addListOpenUpdate(true); }} >+ Add another list</div>\r\n          : <div className=\"add_list_input\">\r\n              <input type='text' onChange={ (e) => addListTitleUpdate(e.target.value) } placeholder=\"Enter list title...\"></input>\r\n              <button onClick={ () => {\r\n\r\n                  if(addListTitle === \"\"){\r\n                    return false;\r\n                  } \r\n\r\n                  dispatch({type:'addList', payload: addListTitle});  \r\n\r\n                  addListOpenUpdate(false); \r\n                  addListTitleUpdate('');\r\n\r\n                  setTimeout(() => {\r\n                    window.scrollTo(50000,0);\r\n                  },0)\r\n\r\n              }}>Add list</button>\r\n              <button onClick={ () => {addListOpenUpdate(false); addListTitleUpdate('');}}>Close</button>\r\n            </div>\r\n        }\r\n\r\n      </div>\r\n    </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers';\r\n\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}